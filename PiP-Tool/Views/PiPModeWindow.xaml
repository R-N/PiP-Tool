<Window x:Class="PiP_Tool.Views.PiPModeWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:PiP_Tool.ViewModels"
        xmlns:controls="clr-namespace:PiP_Tool.Controls"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        mc:Ignorable="d"
        Title="{Binding Title, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
        ResizeMode="CanResizeWithGrip" 
        AllowsTransparency="True"
        MinHeight="{Binding MinHeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
        MinWidth="{Binding MinWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
        Height="{Binding Height, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
        Width="{Binding Width, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
        Top="{Binding Top, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
        Left="{Binding Left, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
        WindowStyle="None" 
        x:Name="Window"
        Topmost="True"
        Opacity="{Binding Opacity, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
        WindowStartupLocation="Manual">

    <Window.DataContext>
        <viewModels:PiPModeViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <command:EventToCommand Command="{Binding LoadedCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="SizeChanged">
            <command:EventToCommand Command="{Binding SizeChangedCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseEnter">
            <command:EventToCommand Command="{Binding MouseEnterCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseMove">
            <command:EventToCommand Command="{Binding MouseMoveCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseDown">
            <command:EventToCommand Command="{Binding MouseDownCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseUp">
            <command:EventToCommand Command="{Binding MouseUpCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseLeave">
            <command:EventToCommand Command="{Binding MouseLeaveCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="DpiChanged">
            <command:EventToCommand Command="{Binding DpiChangedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Background>
        <SolidColorBrush 
            Color="#FF2D2D30"
            Opacity="{Binding BackgroundOpacity, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
         />
    </Window.Background>

    <Grid 
        VerticalAlignment="Stretch" 
        HorizontalAlignment="Stretch"
        Background="#012D2D30"
        Opacity="1"
    >
        <Grid
            VerticalAlignment="Stretch"
            HorizontalAlignment="Right"
            Background="{StaticResource Background}"
            Opacity="1"
        >
            <StackPanel 
                x:Name="TopBar" 
                Width="30"
                Visibility="{Binding SideBarVisibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                Orientation="Vertical" 
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Opacity="1"
             >
                <Button HorizontalAlignment="Left" 
                    ToolTip="{StaticResource Quit}"
                    VerticalAlignment="Top" 
                    Command="{Binding CloseCommand}" 
                    Height="30" 
                    Width="30" 
                    BorderBrush="#e81123"
                    Opacity="0.5"
                    FontFamily="/PiP-Tool;component/Assets/#Flaticon" Content="&#xF102;" Foreground="White" />
                <Button HorizontalAlignment="Left" 
                    x:Name="SwitchToSelectedWindowButton" 
                    ToolTip="{StaticResource SwitchToSelectedWindow}"
                    VerticalAlignment="Top" 
                    Command="{Binding SwitchToSelectedWindowCommand}" 
                    Height="30" 
                    Width="30" 
                    BorderBrush="#FF7C7C7C"
                    Opacity="0.5"
                    FontFamily="/PiP-Tool;component/Assets/#Flaticon" Content="&#128468;" Foreground="White" />
                <Button HorizontalAlignment="Left" 
                    x:Name="MinimizeButton" 
                    ToolTip="{StaticResource Minimize}"
                    VerticalAlignment="Top" 
                    Command="{Binding MinimizeCommand}" 
                    Height="30" 
                    Width="30" 
                    BorderBrush="#FF7C7C7C"
                    Opacity="0.5"
                    FontFamily="/PiP-Tool;component/Assets/#Flaticon" Content="&#128469;" Foreground="White" />
                <Button HorizontalAlignment="Left" 
                    x:Name="OpacityButton" 
                    ToolTip="{StaticResource SetOpacity}"
                    VerticalAlignment="Top" 
                    Command="{Binding SetOpacityCommand}" 
                    CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                    Height="30" 
                    Width="30" 
                    BorderBrush="#FF7C7C7C"
                    Opacity="0.5"
                    FontFamily="/PiP-Tool;component/Assets/#Flaticon" Content="&#128065;" Foreground="White" />
                <Button HorizontalAlignment="Left" 
                    x:Name="VolumeButton" 
                    ToolTip="{StaticResource SetVolume}"
                    VerticalAlignment="Top" 
                    Command="{Binding SetVolumeCommand}" 
                    CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                    Height="30" 
                    Width="30" 
                    BorderBrush="#FF7C7C7C"
                    Opacity="0.5"
                    FontFamily="/PiP-Tool;component/Assets/#Flaticon" Content="&#x1F50A;" Foreground="White" />
                <Button HorizontalAlignment="Left" 
                    x:Name="ForwardInputsButton" 
                    ToolTip="{StaticResource ForwardInputs}"
                    VerticalAlignment="Top" 
                    Command="{Binding ForwardInputsCommand}" 
                    CommandParameter="{Binding RelativeSource={RelativeSource Self}}"
                    Height="30" 
                    Width="30" 
                    BorderBrush="#FF7C7C7C"
                    Opacity="0.5"
                    FontFamily="/PiP-Tool;component/Assets/#Flaticon" Foreground="White" >
                    <TextBlock>&#128377;</TextBlock>
                </Button>
                <Button HorizontalAlignment="Left" 
                    ToolTip="{StaticResource SelectNewWindow}"
                    VerticalAlignment="Top" 
                    Command="{Binding ChangeSelectedWindowCommand}" 
                    Height="30" 
                    Width="30" 
                    BorderBrush="#FF7C7C7C"
                    Opacity="0.5"
                    FontFamily="/PiP-Tool;component/Assets/#Flaticon" Content="&#xF103;" Foreground="White" />

            </StackPanel>
        </Grid>
    </Grid>
</Window>